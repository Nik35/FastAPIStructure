version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dns_orchestrator
    ports:
      - "5432:5432"

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'

  app:
    build: .
    depends_on:
      - postgres
      - kafka
      - redis
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "postgresql://user:password@postgres/dns_orchestrator"
      KAFKA_BROKER_URL: "kafka:29092"
      CELERY_BROKER_URL: "redis://redis:6379/0"

  consumer:
    build: .
    depends_on:
      - kafka
    command: python run_consumer.py
    environment:
      DATABASE_URL: "postgresql://user:password@postgres/dns_orchestrator"
      KAFKA_BROKER_URL: "kafka:29092"
      API_URL: "http://app:8000/api/v1/dns/create"

  worker:
    build: .
    depends_on:
      - redis
    command: celery -A app.tasks worker --loglevel=info -Q dns_tasks
    environment:
      DATABASE_URL: "postgresql://user:password@postgres/dns_orchestrator"
      CELERY_BROKER_URL: "redis://redis:6379/0"
